class SharedResource {
    public synchronized void accessResource(String threadName) {
        System.out.println("Thread " + threadName + " is accessing the shared resource.");
        try {
            Thread.sleep(2000); // Simulating some work
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        System.out.println("Thread " + threadName + " finished accessing the shared resource.");
    }
}

class AccessThread extends Thread {
    private SharedResource resource;
    private String threadName;

    public AccessThread(SharedResource resource, String threadName) {
        this.resource = resource;
        this.threadName = threadName;
    }

    public void run() {
        resource.accessResource(threadName);
    }
}

public class SynchronizationDemo {
    public static void main(String[] args) {
        SharedResource resource = new SharedResource();

        AccessThread thread1 = new AccessThread(resource, "Thread 1");
        AccessThread thread2 = new AccessThread(resource, "Thread 2");

        thread1.start();
        thread2.start();
    }
}
